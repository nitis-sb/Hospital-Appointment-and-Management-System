// <auto-generated />
using System;
using Hospital_Appointment_and_Management_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hospital_Appointment_and_Management_System.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250312124052_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hospital_Appointment_and_Management_System.Models.DoctorSchedule", b =>
                {
                    b.Property<int>("DoctorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorID"));

                    b.HasKey("DoctorID");

                    b.ToTable("DoctorSchedules");
                });

            modelBuilder.Entity("Hospital_Appointment_and_Management_System.Models.TimeSlot", b =>
                {
                    b.Property<int>("TimeSlotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeSlotID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DoctorScheduleDoctorID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("TimeSlotID");

                    b.HasIndex("DoctorScheduleDoctorID");

                    b.ToTable("TimeSlot");
                });

            modelBuilder.Entity("Hospital_Appointment_and_Management_System.Models.TimeSlot", b =>
                {
                    b.HasOne("Hospital_Appointment_and_Management_System.Models.DoctorSchedule", null)
                        .WithMany("AvailableTimeSlots")
                        .HasForeignKey("DoctorScheduleDoctorID");
                });

            modelBuilder.Entity("Hospital_Appointment_and_Management_System.Models.DoctorSchedule", b =>
                {
                    b.Navigation("AvailableTimeSlots");
                });
#pragma warning restore 612, 618
        }
    }
}
