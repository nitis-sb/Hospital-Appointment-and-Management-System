// <auto-generated />
using System;
using Hospital_Appointment_and_Management_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hospital_Appointment_and_Management_System.Migrations
{
    [DbContext(typeof(DoctorScheduleDbContext))]
    [Migration("20250323125959_AddDoctorSchedule1")]
    partial class AddDoctorSchedule1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hospital_Appointment_and_Management_System.Models.DoctorSchedule", b =>
                {
                    b.Property<int>("DoctorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorID"));

                    b.HasKey("DoctorID");

                    b.ToTable("DoctorSchedules");

                    b.HasData(
                        new
                        {
                            DoctorID = 1
                        },
                        new
                        {
                            DoctorID = 2
                        },
                        new
                        {
                            DoctorID = 3
                        },
                        new
                        {
                            DoctorID = 4
                        },
                        new
                        {
                            DoctorID = 5
                        });
                });

            modelBuilder.Entity("Hospital_Appointment_and_Management_System.Models.TimeSlot", b =>
                {
                    b.Property<int>("TimeSlotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeSlotID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<int?>("PatientID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("TimeSlotID");

                    b.HasIndex("DoctorID");

                    b.ToTable("TimeSlots");

                    b.HasData(
                        new
                        {
                            TimeSlotID = 1,
                            Date = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 1,
                            EndTime = new TimeSpan(0, 10, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 2,
                            Date = new DateTime(2025, 3, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 1,
                            EndTime = new TimeSpan(0, 11, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 3,
                            Date = new DateTime(2025, 3, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 1,
                            EndTime = new TimeSpan(0, 12, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 4,
                            Date = new DateTime(2025, 3, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 1,
                            EndTime = new TimeSpan(0, 9, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 5,
                            Date = new DateTime(2025, 3, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 1,
                            EndTime = new TimeSpan(0, 10, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 6,
                            Date = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 2,
                            EndTime = new TimeSpan(0, 10, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 7,
                            Date = new DateTime(2025, 3, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 2,
                            EndTime = new TimeSpan(0, 11, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 8,
                            Date = new DateTime(2025, 3, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 2,
                            EndTime = new TimeSpan(0, 12, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 9,
                            Date = new DateTime(2025, 3, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 2,
                            EndTime = new TimeSpan(0, 9, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 10,
                            Date = new DateTime(2025, 3, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 2,
                            EndTime = new TimeSpan(0, 10, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 11,
                            Date = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 3,
                            EndTime = new TimeSpan(0, 10, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 12,
                            Date = new DateTime(2025, 3, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 3,
                            EndTime = new TimeSpan(0, 11, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 13,
                            Date = new DateTime(2025, 3, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 3,
                            EndTime = new TimeSpan(0, 12, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 14,
                            Date = new DateTime(2025, 3, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 3,
                            EndTime = new TimeSpan(0, 9, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 15,
                            Date = new DateTime(2025, 3, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 3,
                            EndTime = new TimeSpan(0, 10, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 16,
                            Date = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 4,
                            EndTime = new TimeSpan(0, 10, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 17,
                            Date = new DateTime(2025, 3, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 4,
                            EndTime = new TimeSpan(0, 11, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 18,
                            Date = new DateTime(2025, 3, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 4,
                            EndTime = new TimeSpan(0, 12, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 19,
                            Date = new DateTime(2025, 3, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 4,
                            EndTime = new TimeSpan(0, 9, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 20,
                            Date = new DateTime(2025, 3, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 4,
                            EndTime = new TimeSpan(0, 10, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 21,
                            Date = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 5,
                            EndTime = new TimeSpan(0, 10, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 22,
                            Date = new DateTime(2025, 3, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 5,
                            EndTime = new TimeSpan(0, 11, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 23,
                            Date = new DateTime(2025, 3, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 5,
                            EndTime = new TimeSpan(0, 12, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 24,
                            Date = new DateTime(2025, 3, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 5,
                            EndTime = new TimeSpan(0, 9, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotID = 25,
                            Date = new DateTime(2025, 3, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorID = 5,
                            EndTime = new TimeSpan(0, 10, 30, 0, 0),
                            IsAvailable = true,
                            IsBooked = false,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("Hospital_Appointment_and_Management_System.Models.TimeSlot", b =>
                {
                    b.HasOne("Hospital_Appointment_and_Management_System.Models.DoctorSchedule", "DoctorSchedule")
                        .WithMany("AvailableTimeSlots")
                        .HasForeignKey("DoctorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoctorSchedule");
                });

            modelBuilder.Entity("Hospital_Appointment_and_Management_System.Models.DoctorSchedule", b =>
                {
                    b.Navigation("AvailableTimeSlots");
                });
#pragma warning restore 612, 618
        }
    }
}
